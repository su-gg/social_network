{"ast":null,"code":"var _jsxFileName = \"/Users/suu/social_network/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:3010/api/auth\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const logout = () => {\n    console.log(\"Déconnexion...\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    navigate(\"/home\");\n  };\n  const login = async (email, password) => {\n    try {\n      console.log(\"Tentative de connexion avec :\", {\n        email\n      });\n      const {\n        data\n      } = await axios.post(`${API_URL}/login`, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      console.log(\"Réponse API reçue :\", data);\n      if (!data.token || !data.user) {\n        throw new Error(\"Réponse API invalide\");\n      }\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"✅ Token enregistré dans localStorage :\", localStorage.getItem(\"token\"));\n      setUser(data.user);\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error);\n      alert(\"Erreur de connexion. Veuillez vérifier vos identifiants\");\n    }\n  };\n  const register = async (name, username, email, password) => {\n    try {\n      console.log(\"Tentative d'inscription avec :\", {\n        name\n      });\n      await axios.post(`${API_URL}/register`, {\n        name,\n        username,\n        email,\n        password\n      });\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Erreur d'inscription :\", error);\n      alert(\"Erreur d'inscription. Veuillez essayer à nouveau.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6IF8oi2v+FFFMVJXFQinFj68c40=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","useNavigate","jsxDEV","_jsxDEV","API_URL","AuthContext","user","login","register","logout","AuthProvider","children","_s","setUser","navigate","console","log","localStorage","removeItem","email","password","data","post","withCredentials","token","Error","setItem","getItem","error","alert","name","username","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/suu/social_network/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst API_URL = \"http://localhost:3010/api/auth\";\n\ninterface User {\n  id: string;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  user: null,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n});\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const navigate = useNavigate();\n\n  const logout = () => {\n    console.log(\"Déconnexion...\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    navigate(\"/home\");\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      console.log(\"Tentative de connexion avec :\", { email });\n\n      const { data } = await axios.post(`${API_URL}/login`, { email, password }, { withCredentials: true });\n\n      console.log(\"Réponse API reçue :\", data);\n\n      if (!data.token || !data.user) {\n        throw new Error(\"Réponse API invalide\");\n      }\n\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"✅ Token enregistré dans localStorage :\", localStorage.getItem(\"token\"));\n\n      setUser(data.user);\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error);\n      alert(\"Erreur de connexion. Veuillez vérifier vos identifiants\");\n    }\n  };\n\n  const register = async (name: string, username: string, email: string, password: string) => {\n    try {\n      console.log(\"Tentative d'inscription avec :\", { name });\n      await axios.post(`${API_URL}/register`, { name, username, email, password });\n\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Erreur d'inscription :\", error);\n      alert(\"Erreur d'inscription. Veuillez essayer à nouveau.\");\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}