{"ast":null,"code":"var _jsxFileName = \"/Users/suu/social_network/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:3010/api/auth\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // ⏳ Ajout d'un état pour suivre le chargement\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(\"🌀 useEffect exécuté !\");\n    const loadUserFromToken = () => {\n      const token = localStorage.getItem(\"token\");\n      console.log(\"🔑 Token récupéré :\", token);\n      if (!token) {\n        setIsLoading(false); // Fin du chargement si aucun token\n        return;\n      }\n      try {\n        const decodedUser = jwtDecode(token);\n        console.log(\"✅ Utilisateur décodé :\", decodedUser);\n        setUser({\n          id: decodedUser.id,\n          name: decodedUser.name,\n          username: decodedUser.username,\n          email: decodedUser.email\n        });\n      } catch (err) {\n        console.error(\"❌ Token invalide ou expiré:\", err);\n        localStorage.removeItem(\"token\"); // Supprime le token corrompu\n      } finally {\n        setIsLoading(false); // 🚀 Fin du chargement\n      }\n    };\n    loadUserFromToken();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      console.log(\"Tentative de connexion avec :\", {\n        email\n      });\n      const {\n        data\n      } = await axios.post(`${API_URL}/login`, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      console.log(\"Réponse API reçue :\", data);\n      if (!data.token || !data.user) {\n        throw new Error(\"Réponse API invalide\");\n      }\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"✅ Token enregistré dans localStorage :\", localStorage.getItem(\"token\"));\n      setUser(data.user);\n      setIsLoading(false); // 🚀 Fin du chargement après login\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error);\n      alert(\"Erreur de connexion. Veuillez vérifier vos identifiants\");\n    }\n  };\n  const register = async (name, username, email, password) => {\n    try {\n      console.log(\"Tentative d'inscription avec :\", {\n        name\n      });\n      await axios.post(`${API_URL}/register`, {\n        name,\n        username,\n        email,\n        password\n      });\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Erreur d'inscription :\", error);\n      alert(\"Erreur d'inscription. Veuillez essayer à nouveau.\");\n    }\n  };\n  const logout = () => {\n    console.log(\"Déconnexion...\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    navigate(\"/home\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 20\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"o5QfC7aYrUkj9YQ0lGSakMfCddo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jwtDecode","useNavigate","jsxDEV","_jsxDEV","API_URL","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","navigate","console","log","loadUserFromToken","token","localStorage","getItem","decodedUser","id","name","username","email","err","error","removeItem","login","password","data","post","withCredentials","Error","setItem","alert","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/suu/social_network/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst API_URL = \"http://localhost:3010/api/auth\";\n\ninterface User {\n  id: string;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextType | null>(null);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true); // ⏳ Ajout d'un état pour suivre le chargement\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(\"🌀 useEffect exécuté !\");\n    \n    const loadUserFromToken = () => {\n      const token = localStorage.getItem(\"token\");\n      console.log(\"🔑 Token récupéré :\", token);\n  \n      if (!token) {\n        setIsLoading(false); // Fin du chargement si aucun token\n        return;\n      }\n      \n      try {\n        const decodedUser: any = jwtDecode(token);\n        console.log(\"✅ Utilisateur décodé :\", decodedUser);\n\n        setUser({\n          id: decodedUser.id,\n          name: decodedUser.name,\n          username: decodedUser.username,\n          email: decodedUser.email,\n        });\n      } catch (err) {\n        console.error(\"❌ Token invalide ou expiré:\", err);\n        localStorage.removeItem(\"token\"); // Supprime le token corrompu\n      } finally {\n        setIsLoading(false); // 🚀 Fin du chargement\n      }\n    };\n  \n    loadUserFromToken();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      console.log(\"Tentative de connexion avec :\", { email });\n\n      const { data } = await axios.post(`${API_URL}/login`, { email, password }, { withCredentials: true });\n\n      console.log(\"Réponse API reçue :\", data);\n\n      if (!data.token || !data.user) {\n        throw new Error(\"Réponse API invalide\");\n      }\n\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"✅ Token enregistré dans localStorage :\", localStorage.getItem(\"token\"));\n\n      setUser(data.user);\n      setIsLoading(false); // 🚀 Fin du chargement après login\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error);\n      alert(\"Erreur de connexion. Veuillez vérifier vos identifiants\");\n    }\n  };\n\n  const register = async (name: string, username: string, email: string, password: string) => {\n    try {\n      console.log(\"Tentative d'inscription avec :\", { name });\n\n      await axios.post(`${API_URL}/register`, { name, username, email, password });\n\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Erreur d'inscription :\", error);\n      alert(\"Erreur d'inscription. Veuillez essayer à nouveau.\");\n    }\n  };\n\n  const logout = () => {\n    console.log(\"Déconnexion...\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    navigate(\"/home\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {isLoading ? <p>Chargement...</p> : children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}