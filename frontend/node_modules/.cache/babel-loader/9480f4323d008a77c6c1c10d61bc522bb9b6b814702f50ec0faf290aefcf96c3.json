{"ast":null,"code":"var _jsxFileName = \"/Users/suu/social_network/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:3010/api/auth\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  const isAuthenticated = !!user;\n  const logout = () => {\n    console.log(\"Déconnexion...\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setPosts([]);\n    navigate(\"/home\");\n  };\n  const fetchPosts = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:3010/api/auth/posts`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error(\"Erreur lors du chargement des posts :\", error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"🌀 useEffect exécuté !\");\n    const loadUserFromToken = () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n      try {\n        const decodedUser = jwtDecode(token);\n        setUser({\n          id: decodedUser.id,\n          name: decodedUser.name,\n          username: decodedUser.username,\n          email: decodedUser.email\n        });\n      } catch (err) {\n        console.error(\"❌ Token invalide ou expiré:\", err);\n        logout();\n      }\n    };\n    if (isAuthenticated) {\n      fetchPosts(); // Charger les posts après connexion\n    }\n    loadUserFromToken();\n  }, [isAuthenticated]); // Exécuter useEffect seulement si isAuthenticated change\n\n  const login = async (email, password) => {\n    try {\n      console.log(\"Tentative de connexion avec :\", {\n        email\n      });\n      const {\n        data\n      } = await axios.post(`${API_URL}/login`, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      if (!data.token || !data.user) {\n        throw new Error(\"Réponse API invalide\");\n      }\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"✅ Token enregistré dans localStorage :\", localStorage.getItem(\"token\"));\n      setUser(data.user);\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error);\n      alert(\"Erreur de connexion. Veuillez vérifier vos identifiants\");\n    }\n  };\n  const register = async (name, username, email, password) => {\n    try {\n      await axios.post(`${API_URL}/register`, {\n        name,\n        username,\n        email,\n        password\n      });\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Erreur d'inscription :\", error);\n      alert(\"Erreur d'inscription. Veuillez essayer à nouveau.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      posts,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"FWUwcfQzl/84PSrGAN5tD08SHPQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jwtDecode","useNavigate","jsxDEV","_jsxDEV","API_URL","AuthContext","AuthProvider","children","_s","user","setUser","posts","setPosts","navigate","isAuthenticated","logout","console","log","localStorage","removeItem","fetchPosts","data","get","headers","Authorization","getItem","error","loadUserFromToken","token","decodedUser","id","name","username","email","err","login","password","post","withCredentials","Error","setItem","alert","register","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/suu/social_network/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst API_URL = \"http://localhost:3010/api/auth\";\n\ninterface User {\n  id: string;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface Post {\n  id: string;\n  content: string;\n  author: string;\n  createdAt: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  posts: Post[];\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextType | null>(null);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const navigate = useNavigate();\n\n  const isAuthenticated = !!user;\n\n  const logout = () => {\n    console.log(\"Déconnexion...\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setPosts([]);\n    navigate(\"/home\");\n  };\n\n  const fetchPosts = async () => {\n    try {\n      const { data } = await axios.get(`http://localhost:3010/api/auth/posts`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error(\"Erreur lors du chargement des posts :\", error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"🌀 useEffect exécuté !\");\n    \n    const loadUserFromToken = () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n  \n      try {\n        const decodedUser: any = jwtDecode(token);\n        setUser({\n          id: decodedUser.id,\n          name: decodedUser.name,\n          username: decodedUser.username,\n          email: decodedUser.email,\n        });\n      } catch (err) {\n        console.error(\"❌ Token invalide ou expiré:\", err);\n        logout();\n      }\n    };\n\n    if (isAuthenticated) {\n      fetchPosts(); // Charger les posts après connexion\n    }\n\n    loadUserFromToken();\n  }, [isAuthenticated]); // Exécuter useEffect seulement si isAuthenticated change\n\n  const login = async (email: string, password: string) => {\n    try {\n      console.log(\"Tentative de connexion avec :\", { email });\n\n      const { data } = await axios.post(`${API_URL}/login`, { email, password }, { withCredentials: true });\n\n      if (!data.token || !data.user) {\n        throw new Error(\"Réponse API invalide\");\n      }\n\n      localStorage.setItem(\"token\", data.token);\n      console.log(\"✅ Token enregistré dans localStorage :\", localStorage.getItem(\"token\"));\n\n      setUser(data.user);\n      navigate(\"/profile\");\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error);\n      alert(\"Erreur de connexion. Veuillez vérifier vos identifiants\");\n    }\n  };\n\n  const register = async (name: string, username: string, email: string, password: string) => {\n    try {\n      await axios.post(`${API_URL}/register`, { name, username, email, password });\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Erreur d'inscription :\", error);\n      alert(\"Erreur d'inscription. Veuillez essayer à nouveau.\");\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, posts, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}